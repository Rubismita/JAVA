Coding Exercise - Enum Direction
In this problem, you are given an enumeration called Direction which represents the four cardinal directions: NORTH, SOUTH, EAST, WEST.

The goal is to implement the left() and right() methods that correctly return the Direction instance to the left and right, respectively, of a given Direction instance.

The directions are arranged clockwise.

Therefore, the direction to the "left" of NORTH is WEST, of WEST is SOUTH, of SOUTH is EAST, and of EAST is NORTH.

Similarly, the direction to the "right" of NORTH is EAST, of EAST is SOUTH, of SOUTH is WEST, and of WEST is NORTH.



Notes

The switch statement is used to select one of many code blocks to be executed. It's a multi-way branch statement that compares the value of a variable or expression with multiple cases.

The this keyword in Java is used inside a method or constructor to refer itself to the current object.     


public enum Direction {
    NORTH("North"),
    SOUTH("South"),
    EAST("East"),
    WEST("West");

    private String name;

    Direction(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public Direction left() {
        // You are to implement the logic that correctly gets the Direction on the "left"
        // If we represent the directions in a circular format going clockwise
        // then the direction to the "left" of NORTH is WEST, of WEST is SOUTH, of SOUTH is EAST, and of EAST is NORTH
        switch (this) {
            // Write your code here
            case  NORTH:
                return WEST;
            case  WEST:
                return SOUTH;
            case  SOUTH:
                return EAST;
            case  EAST:
                return NORTH; 
               
        }
        return this;
    }

    public Direction right() {
        // Similarly, you are to implement the logic that correctly gets the Direction on the "right"
        // If we represent the directions in a circular format going clockwise
        // then the direction to the "right" of NORTH is EAST, of EAST is SOUTH, of SOUTH is WEST, and of WEST is NORTH
        switch (this) {
            // Write your code here
            case  NORTH:
                return EAST;
            case  EAST:
                return SOUTH;
            case  SOUTH:
                return WEST;
            case  WEST:
                return NORTH; 
        }
        return this;
    }
}